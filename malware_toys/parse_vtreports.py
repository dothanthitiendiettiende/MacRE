import sys
import os
import json
import collections
import operator

def readInVtData(pathToVtData):
    res = []
    for f in os.listdir(pathToVtData):
        if not ".json" in f:
            continue
        vtData = open(os.path.join(pathToVtData, f)).read()
        jsonData = json.loads(vtData, strict=False)
        res.append(jsonData)
    return res

def processVtData(vtData):
    familyCount = collections.defaultdict(int)
    labeling = collections.defaultdict(str)

    for sample in vtData:
        scans = sample.get("scans", {})
        family = str(scans["AVG"]["result"]).replace("a variant of ", "").replace(" potentially unsafe", "")
        if "." in family:
            family = family.split(".")[0]
        familyCount[family] = familyCount[family] + 1
        labeling[sample["sha256"]] = family

    sorted_x = sorted(familyCount.items(), key=operator.itemgetter(1))
    sorted_x.reverse()
    for family in sorted_x:
        print family[0] + ": " + str(family[1])

    resultFile = open("labeling.csv", "w")
    resultFile.write("sha256,LABEL\n")
    for md5, label in labeling.items():
        resultFile.write(md5 + "," + label + "\n")
    resultFile.close()


def main(args):
    if len(args) != 2:
        print "Usage: parse_vtreports.py PATH_TO_VT_JSON_REPORTS"
    else:
        vtData = readInVtData(args[1])
        processVtData(vtData)

if __name__ == "__main__":
    main(sys.argv)